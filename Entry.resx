<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE496gBOPeoCTj3qI0496mJOPeqiTj3q0E49
        6upOPer1Tj3q9U496ulOPerNTj3qn0496l5OPeogTj3qAk496gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE496gBOPeoCTj3qMU496o9OPeraTj3q+k49
        6v9OPer/Tj3q/0496v9OPer/Tj3q/0496v9OPer/Tj3q+U496tdOPeqKTj3qLE496gJOPeoAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE496gBOPeoATj3qFk496oJOPermTj3q/049
        6v9OPer/Tj3q/0496v9OPer/Tj3q/0496v9OPer/Tj3q/0496v9OPer/Tj3q/0496v9OPerjTj3qe049
        6hNOPeoATj3qAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABOPeoATj3qAE496jFOPeq8Tj3q/U49
        6v9OPer/Tj3q/0496v9OPer/Tj3q/0496v9OPer/Tj3q/0496v9OPer/Tj3q/0496v9OPer/Tj3q/049
        6v9OPer8Tj3qtU496ipOPeoATj3qAAAAAAAAAAAAAAAAAAAAAAAAAAAATj3qAE496gBOPeo8Tj3q1U49
        6v9OPer/Tj3q/0496v9OPer/Tj3q/0496v9OPer/Tj3q/0496v9OPer/Tj3q/0496v9OPer/Tj3q/049
        6v9OPer/Tj3q/0496v9OPer/Tj3qzk496jVOPeoATj3qAAAAAAAAAAAAAAAAAE496gBOPeoATj3qMk49
        6tVOPer/Tj3q/0496v9OPer/Tj3q/0496v9OPer/Tj3q/0496v9OPer/Tj3q/0496v9OPer/Tj3q/049
        6v9OPer/Tj3q/0496v9OPer/Tj3q/0496v9OPer/Tj3qzk496itOPeoATj3qAAAAAAAAAAAATj3qAE49
        6hhOPeq+Tj3q/0496v9OPer/Tj3q/0496v9OPer/Tj3q/0496v9OPer/Tj3q/0496v9OPer/Tj3q/049
        6v9OPer/Tj3q/0496v9OPer/Tj3q/0496v9OPer/Tj3q/0496v9OPer/Tj3qtU496hNOPeoAAAAAAE49
        6gBOPeoCTj3qhk496v9OPer/Tj3q/0496v9OPer/TTzq/0086v9NPOr/Tj3q/0496v9OPer/Tj3q/049
        6v9OPer/Tj3q/0496v9OPer/Tj3q/0086v9NPOr/TTzq/0496v9OPer/Tj3q/0496v9OPer9Tj3qek89
        6gBOPeoATj3qAE496jVOPeroTj3q/0496v9OPer/TTzr/1BA6f9XTOX/W1Lj/1ZL5f9PP+n/TTzq/049
        6v9OPer/Tj3q/0496v9OPer/Tj3q/0086v9PP+r/Vkvl/1tS4/9XTOX/UEDp/0086/9OPer/Tj3q/049
        6v9OPerhTj3qLU496gBOPeoCTj3qlE496v9OPer/Tj3q/0496v9gW+D/gpHP/5mwyf+guMn/mK7K/3+N
        0P9dVuH/Tjzq/0496v9OPer/Tj3q/0496v9OPOr/XVXi/3+M0P+Xrsn/oLjJ/5mwyf+Dks//YFvg/049
        6v9OPer/Tj3q/0496v9OPeqJTj3qAE496ihOPerdTj3q/0496v9NPOr/Z2bc/6O4zf/N3Nv/4+np/+ft
        7f/i6ej/zdzb/6C0zv9iXt//TTrr/0076/9NO+v/TTrr/2Fd3/+dsc3/ytrZ/+Ho6P/q7u7/5evr/9De
        3f+mu87/aGfc/0086v9OPer/Tj3q/0496tZOPeogTj3qa0496vtOPer/TTzq/1hO5P+lttP/5evp//X0
        9P/Jzs//jJWX/9/i4v/09PT/5evp/6S10/92gNP/dn/U/3Z/1P92gNP/n7HQ/+Ho5//z8/P/6Onp/6Wp
        qv+8v7//8vLy/+jt6/+rutX/WU/j/0086v9OPer/Tj3q+E496l5OPeqrTj3q/0496v9MO+r/eXvc/+Dn
        5//19fT/+Pj4/5CRkv8vLzD/vb6+//j4+P/09PT/4uno/8PW1v/C1dX/wtXV/8LV1f/e5ub/9PPz//f3
        9/+1trf/MTIz/05QUP/g4OH/9vX1/+Xr6v9+ft7/TDvq/0496v9OPer/Tj3qnU496thOPer/Tj3q/008
        6f+goeP/8/Tx/9DW1/+xu73/bnN0/zQ0NP+LkZP/tL2//9zg4f/z8/P/8/Ly//Py8v/z8vL/8/Ly//Pz
        8//q6+v/2t3d/7y8vP9AQED/YGBg/9bY2P/a3d3/8vPx/6in5/9NPen/Tj3q/0496v9OPerMTj3q8k49
        6v9OPer/Tj3q/7Ov7P/v8O3/Zmlq/ywuL/8xMjL/MzMz/zAyMv8tLzD/io6O//T09P/y8vL/8vLy//Ly
        8v/y8vL/8fLy/46Qkf9BREX/o6Wm/8vLy//Ozs7/cnV2/0hKS//ExsT/v7rx/1A/6v9OPer/Tj3q/049
        6udOPer9Tj3q/0496v9OPer/sqvv//Dx7v94eHj/Pj4+/zk5Of8zMzP/PDw8/0A/P/+amZn/9PT0//Ly
        8v/y8vL/8vLy//Ly8v/v7+//bGxs/ykoKP+JiYn/+Pn5/+Xl5v9RUVH/LS0t/6ysqf/CvfP/UEDq/049
        6v9OPer/Tj3q80496v1OPer/Tj3q/0w66v+akO7/9PTy/+Li4v/R0dH/fX19/zQ0NP+hoaH/09PT/+np
        6f/y8vL/8vLy//Ly8v/y8vL/8vLy//Pz8/++vr7/hISE/7q7vP+IjI3/o6en/6mpqf+Kior/4ODd/6mh
        7/9NPOr/Tj3q/0496v9OPer0Tj3q80496v9OPer/TDvq/2td6//g3vH/9fXz//f39/+Xl5f/Nzc3/8HB
        wf/39/f/8/Pz//Ly8v/y8vL/8vLy//Ly8v/y8vL/8vLy//Pz8//29vb/rq+v/y0tLf9LTEz/4OHh//b2
        9P/o5/L/dWjs/0w76v9OPer/Tj3q/0496uhOPeraTj3q/0496v9OPer/Tj3q/5KI7f/r6/L/9vbz/9nZ
        2f+vr6//5+fn//Pz8//y8vL/8vLy//Ly8v/y8vL/8vLy//Ly8v/y8vL/8vLy//T09P/Hx8f/T09P/3Nz
        cv/r6+n/7+/y/56V7v9QP+r/Tj3q/0496v9OPer/Tj3qzk496q5OPer/Tj3q/0496v9OPer/UEDq/4l+
        7f/RzfD/7ezz//Pz9f/x8fP/8PDy//Dw8v/w8PL/8PDy//Dw8v/w8PD/8PDy//Dw8v/w8PL/8PDy/+/v
        8f/a2tv/397k/9bT8f+Rh+3/U0Lq/0086v9OPer/Tj3q/0496v9OPeqhTj3qb0496vxOPer/Tj3q/049
        6v9OPer/TDvq/1tL6/92aez/g3jt/4N47f+DeO3/g3jt/4N47f+DeOz/cGuZ/3Zvs/+DeO//g3jt/4N4
        7f+DeO3/g3jt/4V57v95bO3/XU7r/0086v9OPOr/Tj3q/0496v9OPer/Tj3q+U496mFOPeosTj3q4E49
        6v9OPer/Tj3q/0496v9OPer/TTzq/0w66v9LOur/Szrq/0s66v9LOur/Szrs/0M0xf8qJFn/RTbP/0s6
        6/9LOur/Szrq/0s66v9LOur/Szrq/0w66v9NPOr/Tj3q/0496v9OPer/Tj3q/0496v9OPerZTj3qI049
        6gNOPeqaTj3q/0496v9OPer/Tj3q/0496v9OPer/Tj3q/0496v9OPer/Tj3q/0496v9OPez/Ny6F/zgv
        i/9PPez/Tj3q/0496v9OPer/Tj3q/0496v9OPer/Tj3q/0496v9OPer/Tj3q/0496v9OPer/Tj3q/049
        6o5OPeoBTj3qAE496jpOPerrTj3q/0496v9OPer/Tj3q/0496v9OPer/Tj3q/0496v9OPer/Tj3q/008
        5P8vKWX/Qza8/0897f9OPer/Tj3q/0496v9OPer/Tj3q/0496v9OPer/Tj3q/0496v9OPer/Tj3q/049
        6v9OPerlTj3qMU496gBOPeoATj3qA0496o1OPer/Tj3q/0496v9OPer/Tj3q/0496v9OPer/Tj3q/049
        6v9OPev/TDzh/y4oYf9FN8X/Tz3s/0496v9OPer/Tj3q/0496v9OPer/Tj3q/0496v9OPer/Tj3q/049
        6v9OPer/Tj3q/k496oJOPeoBTj3qAAAAAABOPeoATj3qHE496sVOPer/Tj3q/0496v9OPer/Tj3q/049
        6v9OPer/Tj3q/0496v9OPej/Mitw/z8zqv9PPe3/Tj3q/0496v9OPer/Tj3q/0496v9OPer/Tj3q/049
        6v9OPer/Tj3q/0496v9OPeq8Tj3qF0496gAAAAAAAAAAAE496gBOPeoATj3qOU496ttOPer/Tj3q/049
        6v9OPer/Tj3q/0496v9OPer/Tj3q/0897f87MJf/NS19/0496/9OPer/Tj3q/0496v9OPer/Tj3q/049
        6v9OPer/Tj3q/0496v9OPer/Tj3q1U496jFOPeoATj3qAAAAAAAAAAAAAAAAAE496gBOPeoATj3qRU49
        6txOPer/Tj3q/0496v9OPer/Tj3q/0496v9OPer/Tz3s/0U3w/8uKF//Szve/0496/9OPer/Tj3q/049
        6v9OPer/Tj3q/0496v9OPer/Tj3q/0496tZOPeo9Tj3qAE496gAAAAAAAAAAAAAAAAAAAAAAAAAAAE49
        6gBOPeoATj3qOU496sZOPer+Tj3q/0496v9OPer/Tj3q/0496v9OPev/Szvf/y4oYP9FN8T/Tz3s/049
        6v9OPer/Tj3q/0496v9OPer/Tj3q/0496v5OPeq/Tj3qMk496gBOPeoAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAE496gBOPeoATj3qHE496o5OPersTj3q/0496v9OPer/Tj3q/0496v9OPer/Myt0/z4z
        pv9PPe3/Tj3q/0496v9OPer/Tj3q/0496v9OPerpTj3qh0496hhOPeoATj3qAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABOPeoATj3qBE496jpOPeqbTj3q4U496vxOPer/Tj3q/089
        7f84L43/OC+M/0897f9OPer/Tj3q/0496vtOPerfTj3qlk496jVOPeoDTj3qAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATj3qAE496gROPeosTj3qcE49
        6rBOPercTz7u9D0yn/40LHv+Tj3s80496tpOPeqtTj3qbE496ilOPeoETj3qAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/4AB//4AAH/8AAA/+AAAH/AAAA/gAAAHwAAAA4AAAAOAAAABAAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAABgAAAAcAA
        AAPgAAAH8AAAD/gAAB/8AAA//gAAf/+AAf8=
</value>
  </data>
</root>